<?xml version="1.0" standalone="yes" ?>
<job id="jsolait">
    <?job error="true" debug="false"?>
    <description>
        JavaScript O Lait for WSH.
        
       Copyright (c) 2005-2006 Jan-Klaas Kollhof
       
       This file is part of jsolait
     
       jsolait is free software; you can redistribute it and/or modify
       it under the terms of the GNU Lesser General Public License as published by
       the Free Software Foundation; either version 2.1 of the License, or
       (at your option) any later version.
      
       This software is distributed in the hope that it will be useful,
       but WITHOUT ANY WARRANTY; without even the implied warranty of
       MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
       GNU Lesser General Public License for more details.
      
       You should have received a copy of the GNU Lesser General Public License
       along with this software; if not, write to the Free Software
       Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307  USA     
    </description>

    <runtime>
        <unnamed name="filename" helpstring="The scriptfiles to run." many="false" required="1" />
        <named name="script-args" helpstring="Specifies arguments to pass to the module/script being run. This may be text or a JSON encoded object" many="false" required="0" />
    </runtime>
    
    <script language="JavaScript" src="./jsolait.js" />
    
    <script language="JavaScript"> <![CDATA[
    
    jsolait.Module("jsolaitws", function(publ,priv,__builtin__){with(publ){with(priv){with(__builtin__){
        __version__ = "$Revision$"
        __sourceURI__ = 'file://' + WScript.scriptFullName;
        jsolait.__sourceURI__ = 'file://' + WScript.scriptFullName.slice(0,-3) + "js";
        
        var fs= new ActiveXObject("Scripting.FileSystemObject");
        ///The location where jsolait is installed.
        jsolait.baseURI = 'file://' + fs.getParentFolderName(WScript.scriptFullName);
        jsolait.moduleSearchURIs = ["%(baseURI)s/lib"];
        
        var wshShell= new ActiveXObject("WScript.Shell");
        var ForReading = 1, ForWriting = 2;
        
        print = function(m){
            var s=[];
            for(var i=0;i<arguments.length;i++){
                s.push(''+arguments[i]);
            }
            
            WScript.echo(s.join(" "));
        }
         
        pprint= function(m, indent){
            var m = m.split("\n");
            
            indent =(indent === undefined) ? 0 : indent;
            
            if(indent<0){
                pprint.indent+=indent;
            }
            
            var s=[];
            for(var i=0;i<pprint.indent;i++){
                s.push(' ');
            }
            s=s.join('');
            for(var i=0;i<m.length;i++){
                print(s + m[i]);
            }
            
            if(indent>0){
                pprint.indent += indent;
            }
        }
        pprint.indent=0;
        
        Error.prototype.toString=function(){
            return  this.name +": " + this.message;
        }
        
        publ.run=function(){
            
            if (WScript.arguments.unnamed.length==0){
                WScript.Arguments.ShowUsage();                                              
                return;
            }else{
                //var fileName=fs.getAbsolutePathName(WScript.arguments.unnamed.item(0));
                var fileName=WScript.arguments.unnamed.item(0);
                //todo:check if file exists
            }
                        
            //get the base of the file to execute
            var fileBase= fs.getParentFolderName(fileName);
            
            //make sure the search path is updated to include the fileBase
            jsolait.moduleSearchURIs = [fileBase,  "%(baseURI)s/lib"];
            
            //change working dir to the file's location
            //todo:is it OK to change cwd?
            if(fileBase.slice(0, 'file://'.length) == 'file://'){
                wshShell.currentDirectory = fileBase.slice('file://'.length);
            }
            
            if(fileName.toLowerCase() != jsolait.__sourceURI__.toLowerCase()  &&  fileName.toLowerCase() != __sourceURI__.toLowerCase()){
                var src = jsolait.loadURI(fileName);
                
                var modl = jsolait.createModuleFromSource("__main__", src, fileName);
                try{
                    var tmain =typeof(modl.__main__);
                }catch(e){
                    var tmain="";
                }
                if(tmain=='function'){
                    //todo find arguments
                    if(WScript.arguments.named.exists("script-args")){
                        var args = WScript.arguments.named.Item("script-args");
                        switch(args.slice(0,1)){
                            case "{": case "'":  case "[":  case '"':
                                break;
                            default:
                                args = repr(args);
                        }
                        f=new Function( "return " + args);
                        args = [f()];
                    }else{
                        var args =[];
                    }
                    
                    try{
                        modl.__main__.apply(modl, args);
                    }catch(e){
                        throw new Exception("runing %s  __main__()  failed\n".format(modl),e)
                    }
                }
                
            }
        };
    }}}});

    try{
        jsolait.loadModule("jsolaitws").run();
    }catch(e){
        WScript.echo(""+e);
    }
       
    ]]>
    </script>
    
</job>
